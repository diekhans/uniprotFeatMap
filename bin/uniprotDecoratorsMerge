#!/usr/bin/env python3

import sys
import os.path as osp
import argparse
import pipettor
from pycbio.sys import fileOps

sys.path.insert(0, osp.normpath(osp.join(osp.dirname(__file__), "../lib")))
from uniprotmap.uniprotDecorators import decoratorBedSortOpts

def parseArgs():
    desc = """
    Merge sorted UniProt decorator BEDs.
    """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("--outBed", default="/dev/stdout",
                        help="""BED file conforming to uniprotDecoration.as; will be genome order sorted (output)""")
    parser.add_argument("inputBeds", nargs="+",
                        help="uniprotDecoration.as BED files merge; must be sorted in genome order (input)")
    return parser.parse_args()


def uniprotDecoratorsMerge(inputBeds, outBed):
    with fileOps.AtomicFileCreate(outBed) as tmpDecoBed:
        pipettor.run(["sort", "--merge"] + decoratorBedSortOpts + inputBeds, stdout=tmpDecoBed)

def main(opts):
    uniprotDecoratorsMerge(opts.inputBeds, opts.outBed)

main(parseArgs())

#!/usr/bin/env python3

import sys
import os.path as osp
import argparse
import re
import functools

sys.path.insert(0, osp.normpath(osp.join(osp.dirname(__file__), "../lib")))
from uniprotmap.align import proteinTranscriptAlign
from uniprotmap.uniprot import UniProtMetaTbl, dropUniportIsoformModifier

def parseArgs():
    desc = """Align UniProt protein sequences to UniProt canonical transcripts
    RNAs with BLAT or BLAST.  Creates a protein to NA PSL alignments, with
    some basic filtering.  UTR is hard masked to prevent alignment outside of
    CDS without changing sequence size.

    Program can be rerun to finish up after manual parasol recovery. After a
    failure is connect and jobs finished, touch ${workdir}/aligns.done and
    rerun this program.
    """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("--algo", choices=("blast", "blat"), default="blat",
                        help="alignment algorithm")
    parser.add_argument("uniprotMetaTsv",
                        help="""Uniprot metadata in TSV format (input)""")
    parser.add_argument("proteinFa",
                        help="""UniProt FASTA (input)""")
    parser.add_argument("transFa",
                        help="""transcript FASTA, CDS must be in upper-case and UTR in lowercase (input)""")
    parser.add_argument("prot2CanonTransPsl",
                        help="""alignments of UniProt proteins to their canonical transcripts, sorted by transcript (output)""")
    parser.add_argument("workDir",
                        help="temporary directory used by parasol run")
    return parser.parse_args()

def queryFaEditFilter(faRec):
    """Select canonical isoform records.  They which have headers like
    >P14060 isRefOf P14060
    """
    return re.match("^.+ isRefOf .+$", faRec.description) is not None

def targetFaEditFilter(uniprotMetaTbl, faRec):
    """only used transcripts associated with canonical protein"""
    return uniprotMetaTbl.isCanonProtTrans(faRec.id)

def alignFilter(uniprotMetaTbl, psl):
    """Only keep alignments from canonical SwissProt isoform, as alt-isoforms to
    a canonical transcript"""
    uniprotMeta = uniprotMetaTbl.getByAcc(dropUniportIsoformModifier(psl.qName))
    return ((psl.qName == uniprotMeta.mainIsoAcc) and uniprotMeta.isCanonProtTrans(psl.tName))

def uniprotProteinTranscriptAlign(uniprotMetaTsv, proteinFa, transFa, prot2CanonTransPsl, algo, workDir):
    uniprotMetaTbl = UniProtMetaTbl(uniprotMetaTsv)

    proteinTranscriptAlign(proteinFa, transFa, prot2CanonTransPsl, algo, workDir,
                           queryFaEditFilterFunc=queryFaEditFilter,
                           targetFaEditFilterFunc=functools.partial(targetFaEditFilter, uniprotMetaTbl),
                           alignFilterFunc=functools.partial(alignFilter, uniprotMetaTbl))

def main(opts):
    uniprotProteinTranscriptAlign(opts.uniprotMetaTsv, opts.proteinFa, opts.transFa,
                                  opts.prot2CanonTransPsl, opts.algo, opts.workDir)

main(parseArgs())

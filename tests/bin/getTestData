#!/bin/bash
set -beEu -o pipefail

# to build add entries to test set
#      tmlr cut -f acc input/swissprot.9606.tab input/trembl.9606.tab >acc.tsv
#    add new swissprot accession to acc.tsv
#      ./bin/getTestData acc.tsv tmp
#    to include all
#      cp tmp/*. input/
#      make -j 10 -k aligntest >&log
#      cp output/*.psl expected/
#    repeat until we have all updated (3 times)
#      make -j 10 -k test >&log
#      cp output/*.{psl,tsv,bed} expected/

# this can also be run using just one uniprot accession, trimming down the
# GENCODE results and appending.
#

gencodeRel=43

usage="$0 acctsv outdir"

if [ $# != 2 ] ; then
    echo "Wrong # args: $usage" >&2
    exit 1
fi
acctsv="$1"
outdir="$2"

spdir=/hive/data/outside/otto/uniprot/tab
spInPre=${spdir}/swissprot.9606
trInPre=${spdir}/trembl.9606
gndir=/hive/data/genomes/hg38/bed/gencodeV${gencodeRel}/hgcImport/data
gnfa=${gndir}/release_${gencodeRel}/gencode.v${gencodeRel}.pc_transcripts.fa.gz
chromSizes=/hive/data/genomes/hg38/chrom.sizes

spOutPre=${outdir}/swissprot.9606
trOutPre=${outdir}/trembl.9606
gnOutPre=${outdir}/gencode.v${gencodeRel}
mkdir -p ${outdir}

##
# extracting data from both swssprot and trembl
##
function getUniProtTestData() {
    local inpre=$1 outpre=$2
    # swissprot data (annots has stray quotes, so use tsvlite)
    tmlr join -j acc -f ${acctsv} ${inpre}.tab > ${outpre}.tab
    mlr --tsvlite join -j acc -f ${acctsv} ${inpre}.annots.tab > ${outpre}.annots.tab

    # all isoforms for acc
    faSize -detailed ${inpre}.fa.gz | fgrep -f ${acctsv} | cut -f 1 >${outpre}.fa.ids.tmp
    faSomeRecords ${inpre}.fa.gz ${outpre}.fa.ids.tmp ${outpre}.fa
    faSize -detailed ${outpre}.fa > ${outpre}.sizes
}

getUniProtTestData ${spInPre} ${spOutPre}
getUniProtTestData ${trInPre} ${trOutPre}

##
# gencode genes in UniProt.  Split comma-separated lists into lines 
##
tmlr cut -f ensemblGene ${spOutPre}.tab > ${gnOutPre}.sp.gene.acc.tmp
tmlr cut -f ensemblGene ${trOutPre}.tab > ${gnOutPre}.tr.gene.acc.tmp
tmlr cat ${gnOutPre}.sp.gene.acc.tmp ${gnOutPre}.tr.gene.acc.tmp | \
    tawk '{$0 = gensub("\\.[0-9A-Z_]+","","g"); print gensub("\\|","\n","g")}' > ${gnOutPre}.gene.acc.tmp
(head -1 ${gndir}/gencode.tsv && fgrep -f ${gnOutPre}.gene.acc.tmp ${gndir}/gencode.tsv) > ${gnOutPre}.metadata.tsv

# fasta ids
zcat ${gnfa} | fgrep -f ${gnOutPre}.gene.acc.tmp | sed -e 's/>//' > ${gnOutPre}.fa.ids.tmp
faSomeRecords ${gnfa} ${gnOutPre}.fa.ids.tmp ${gnOutPre}.pc_transcripts.fa

# gencode to genome PSL
awk '/^>/{print gensub(">([A-Z0-9.]+).*$", "\\1", 1)}' ${gnOutPre}.pc_transcripts.fa > ${gnOutPre}.trans.acc.tmp
fgrep -f ${gnOutPre}.trans.acc.tmp ${gndir}/gencode.gp > ${gnOutPre}.gp
genePredToPsl ${chromSizes} ${gnOutPre}.gp ${gnOutPre}.psl

rm -f ${outdir}/*.tmp
